[project]
name = "pyxxl"
authors = [{ name = "fcfangcc", email = "swjfc22@live.com" }]
description = "A Python executor for XXL-jobs"
readme = "README.md"
requires-python = ">=3.9"
version = "0.3.7a1"
classifiers = [
  "Topic :: Software Development",
  "Libraries :: Python Modules",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
keywords = ["XXL", "scheduled"]
license = { text = "GPL-3.0-only" }
dependencies = ["aiofiles", "aiohttp"]


[project.optional-dependencies]
dotenv = ["python-dotenv"]
metrics = ["prometheus-client"]
redis = ["redis"]
all = ["redis", "python-dotenv", "prometheus-client"]
doc = [
  "mdx-include~=1.4",
  "mkdocs~=1.4",
  "mkdocs-material~=9.0",
  "mkdocstrings[python]~=0.20",
]
dev = [
  "mypy~=1.8.0",
  "pre-commit~=3.6.0",
  "pytest==7.1",
  "pytest-aiohttp==1.0.4",
  "pytest-asyncio==0.18.3",
  "pytest-cov==3.0.0",
  "ruff<=1",
]

[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["pyxxl*"]
exclude = ["pyxxl.tests*"]

[tool.mypy]
disallow_untyped_defs = true
exclude = ['^pyxxl/tests/test_.*\.py$', '^pyxxl/tests/api/test_.*\.py$']
files = "pyxxl"
ignore_missing_imports = true

[tool.coverage.run]
concurrency = ["thread"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if __name__ == .__main__.",
  "raise NotImplementedError",
  "\\.\\.\\.",
  "if TYPE_CHECKING",
]

[tool.ruff]
exclude = ["__init__.py"]
line-length = 119


[tool.ruff.lint]
ignore = [
  "C408", # Unnecessary `dict` call (rewrite as a literal)
]
select = ["E", "W", "F", "I", "C", "B", "PGH"]

[tool.pytest.ini_options]
addopts = "--asyncio-mode auto"
