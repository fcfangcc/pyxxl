[tool.poetry]
name = "pyxxl"
version = "0.3.0a3"
readme = "README.md"
license = "GPL-3.0-only"
description = "A Python executor for XXL-jobs"
authors = ["fcfangcc <swjfc22@live.com>"]
repository = "https://github.com/fcfangcc/pyxxl"
keywords = ["XXL"]
classifiers = [
    "Topic :: Software Development :: Libraries :: Python Modules"
]


[tool.poetry.dependencies]
python = "^3.8"
aiohttp = "^3.8.1"
aiofiles = "^22.1.0"
redis = { version = "^4.4.0", optional = true }
python-dotenv = { version = "*", optional = true }
prometheus-client = { version = "*", optional = true }

[tool.poetry.extras]
redis = ["redis"]
dotenv = ["python-dotenv"]
metrics = ["prometheus-client"]
all = ["redis", "python-dotenv","prometheus-client"]

[tool.poetry.group.doc.dependencies]
mkdocs = "^1.4.2"
mkdocstrings = { version = "^0.20.0", extras = ["python"] }
mkdocs-material = "^9.0.9"
mdx-include = "^1.4.2"

[tool.poetry.group.dev.dependencies]
pytest = "7.1.2"
pytest-asyncio = "0.18.3"
pre-commit = "2.19.0"
mypy = "0.942"
pytest-aiohttp = "1.0.4"
pytest-cov = "3.0.0"
ruff = "^0.0.249"
black = "23.1.0"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# if your need
# https://python-poetry.org/docs/repositories/#install-dependencies-from-a-private-repository
[[tool.poetry.source]]
name = "aliyun"
url = "https://mirrors.aliyun.com/pypi/simple/"
secondary = true

[tool.mypy]
files = "pyxxl"
ignore_missing_imports = true
disallow_untyped_defs = true
exclude = [
    '^pyxxl/tests/test_.*\.py$',
    '^pyxxl/tests/api/test_.*\.py$',
]


[tool.coverage.run]
concurrency = ["thread"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.",
    "raise NotImplementedError",
    "\\.\\.\\.",
    "if TYPE_CHECKING",
]

[tool.black]
line-length = 119
target-version = ['py38']

[tool.ruff]
line-length = 119
select = [
    "E",
    "W",
    "F",
    "I",
    "C",
    "B",
    "PGH"
]
exclude = [
    "__init__.py"
]

ignore = [
    "C408",  # Unnecessary `dict` call (rewrite as a literal)
]
